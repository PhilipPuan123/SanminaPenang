------------------------------------------------
2018-12-11 22:36:19Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:20Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [ConstraintSolver] Z3ErrorException: type error (TypeError); consider setting environment variable z3_logdir for diagnosis
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException type error (TypeError)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: type error (TypeError)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_eq(_Z3_context* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkEq(IntPtr l, IntPtr r)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.MakeEquals(IntPtr left, IntPtr right)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapAxioms>d__108.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<GetInstanceFieldMapsAxioms>d__126.MoveNext()
   at Microsoft.ExtendedReflection.Z32Solver.Z3Background.<CreateAxioms>d__66.MoveNext()
   at Microsoft.ExtendedReflection.Collections.Enumerable.ToArray[T](IEnumerable`1 enumerable)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.InternalTryGetModel(IModel& model)

------------------------------------------------
2018-12-11 22:36:21Z> [Execution] Unexpected failure during exploration
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException invalid argument (InternalFatal)
Microsoft.ExtendedReflection.Z32Solver.Z3ErrorException: invalid argument (InternalFatal)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3ErrorHandler(ErrorCode code)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Microsoft.Z3.IErrorHandler.Handler(ErrorCode code)
   at ?A0xf49d1f77.error_handler(Z3_error_code c)
   at Z3_mk_store(_Z3_context* , _Z3_ast* , _Z3_ast* , _Z3_ast* )
   at Microsoft.Z3.RawContext.MkArrayStore(IntPtr a, IntPtr i, IntPtr v)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Wrapper.Z3Api.Z3Array.Update(IntPtr array, IntPtr index, IntPtr newValue)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitUpdate(TermKind parameter, Term term, Term baseCompound, ITermMap updates)
   at Microsoft.ExtendedReflection.Interpretation.Term.Update.Visit[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter)
   at Microsoft.ExtendedReflection.Interpretation.TermManagerBase.VisitTerm[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitTerm(TermKind parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitSelect(TermKind parameter, Term term, Term compound, Term index)
   at Microsoft.ExtendedReflection.Interpretation.Term.Select.Visit[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter)
   at Microsoft.ExtendedReflection.Interpretation.TermManagerBase.VisitTerm[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitTerm(TermKind parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitSelect(TermKind parameter, Term term, Term compound, Term index)
   at Microsoft.ExtendedReflection.Interpretation.Term.Select.Visit[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter)
   at Microsoft.ExtendedReflection.Interpretation.TermManagerBase.VisitTerm[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitTerm(TermKind parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitUnary(TermKind parameter, Term term, UnaryOperator operator, Term operand)
   at Microsoft.ExtendedReflection.Interpretation.Term.Unary.Visit[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter)
   at Microsoft.ExtendedReflection.Interpretation.TermManagerBase.VisitTerm[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitTerm(TermKind parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitBinary(TermKind parameter, Term term, BinaryOperator operator, Term left, Term right)
   at Microsoft.ExtendedReflection.Interpretation.Term.Binary.Visit[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter)
   at Microsoft.ExtendedReflection.Interpretation.TermManagerBase.VisitTerm[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitTerm(TermKind parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitUnary(TermKind parameter, Term term, UnaryOperator operator, Term operand)
   at Microsoft.ExtendedReflection.Interpretation.Term.Unary.Visit[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter)
   at Microsoft.ExtendedReflection.Interpretation.TermManagerBase.VisitTerm[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitTerm(TermKind parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitBinary(TermKind parameter, Term term, BinaryOperator operator, Term left, Term right)
   at Microsoft.ExtendedReflection.Interpretation.Term.Binary.Visit[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter)
   at Microsoft.ExtendedReflection.Interpretation.TermManagerBase.VisitTerm[TResult,TParameter](ITermVisitor`2 visitor, TParameter parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3ExpressionMapper.VisitTerm(TermKind parameter, Term term)
   at Microsoft.ExtendedReflection.Z32Solver.Z3Solver.Microsoft.ExtendedReflection.Reasoning.ISolver.Assert(String description, Term condition)
   at Microsoft.Pex.Engine.InputEnumeration.SearchingModelProviderBySolving.Worker.AddConstraint(Boolean flipped, Term condition)
   at Microsoft.Pex.Engine.InputEnumeration.SearchingModelProviderBase.IncrementalWorker.addAllOtherConstraints()
   at Microsoft.Pex.Engine.InputEnumeration.SearchingModelProviderBase.IncrementalWorker.analyze()
   at Microsoft.Pex.Engine.InputEnumeration.SearchingModelProviderBase.IncrementalWorker.TryGetModel(IModel& model, IExecutionSignature& modelExecutionSignature)
   at Microsoft.Pex.Engine.InputEnumeration.SearchingModelProviderBase.tryGetModel(IExecutionNode parentOfFlipped, WorkerBase worker, Term[] feasiblePrefix, Term suffix, IModel& model, IExecutionSignature& modelExecutionSignature)
   at Microsoft.Pex.Engine.InputEnumeration.SearchingModelProviderBase.<GetInputModels>d__38.MoveNext()
   at Microsoft.Pex.Engine.InputEnumeration.PexInputEnumeratorManager.SequentialInputEnumerator.<GetInputModels>d__6.MoveNext()
   at Microsoft.Pex.Engine.Search.Searcher.<GetPathEngines>d__27.MoveNext()
   at Microsoft.Pex.Engine.Drivers.PexExplorationDriver.InternalExplore()
   at Microsoft.Pex.Engine.Drivers.PexExplorationDriverBase.CheckedExploreInternal()
   at Microsoft.Pex.Engine.Drivers.PexExplorationDriverBase.Execute()
   at Microsoft.Pex.Engine.Drivers.PexExplorationDriverBase.Explore()

